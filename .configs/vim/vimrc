if empty(glob('~/.config/vim/autoload/plug.vim'))
       silent !curl -fLo ~/.config/vim/autoload/plug.vim --create-dirs
         \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
       autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
    endif
"set nocompatible
syntax enable
let mapleader = ' '

set number relativenumber
set noswapfile
set scrolloff=5
set backspace=indent,eol,start
set clipboard=unnamedplus
set nohlsearch
set nowrap
set signcolumn=yes

" Pythonic stuff
set tabstop=4
set expandtab
set softtabstop=4
set shiftwidth=4
set autoindent
set fileformat=unix

set hidden
set wildmenu
set ignorecase
set smartcase
"set laststatus=2
"
set undofile                " Save undos after file closes
set undodir=/tmp" where to save undo histories
"set mouse=a
set cmdheight=2
map Y y$
set ttimeoutlen=50
set updatetime=500

call plug#begin('~/.config/vim/plugged')
Plug 'vim-airline/vim-airline'
Plug 'morhetz/gruvbox' 
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'airblade/vim-gitgutter'
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-commentary'
Plug 'neovim/nvim-lspconfig'
Plug 'hrsh7th/nvim-compe'
" Plug 'hrsh7th/nvim-cmp'
" Plug 'folke/lsp-colors.nvim'
" Plug 'nvim-lua/completion-nvim'
" Plug 'nvim-lua/diagnostic-nvim'
Plug 'sbdchd/neoformat'
Plug 'nvim-lua/plenary.nvim' " don't forget to add this one if you don't have it yet!
Plug 'ThePrimeagen/harpoon'
call plug#end()

" set completeopt-=preview
set completeopt=menuone,noselect

" use omni completion provided by lsp
autocmd Filetype python setlocal omnifunc=v:lua.vim.lsp.omnifunc


let g:EasyMotion_smartcase = 1
let g:gitgutter_close_preview_on_escape=1
let g:airline_theme='gruvbox'

colorscheme gruvbox
let g:gruvbox_transparent_bg = 1
set background=dark
highlight Normal     ctermbg=NONE guibg=NONE
highlight LineNr     ctermbg=NONE guibg=NONE
highlight SignColumn ctermbg=NONE guibg=NONE

" unmapping
" cant find a way for plugin maps, remap for now
map <leader>gsh <Plug>(GitGutterStageHunk)
map <leader>gsu <Plug>(GitGutterUndoHunk)
map gp <Plug>(GitGutterPreviewHunk)
"
"

inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"


map <leader>glf :Neoformat<CR>


nnoremap ; :
nnoremap : ;
nnoremap <leader>wh :wincmd h<CR>
nnoremap <leader>wj :wincmd j<CR>
nnoremap <leader>wk :wincmd k<CR>
nnoremap <leader>wl :wincmd l<CR>
nnoremap <leader>l :bp<CR>
nnoremap <leader>h :bn<CR>
nnoremap <leader>bw :bw<CR>
nnoremap <leader>p :buffers<CR>:buffer<Space>
nnoremap <leader>cc :ccl<CR>

nnoremap <C-p> :Files<CR>
nnoremap <leader>z :noh<CR>
nnoremap <leader>re :so ~/.config/vim/vimrc<CR>
nnoremap <leader>rr :edit!<CR>
nnoremap <leader>rg :Rg   

" -------------End

" harpoon
nnoremap <silent><leader>a  :lua require("harpoon.mark").add_file()<CR>
nnoremap <silent><C-e>      :lua require("harpoon.ui").toggle_quick_menu()<CR>
nnoremap <silent><leader>tc :lua require("harpoon.cmd-ui").toggle_quick_menu()<CR>

nnoremap <silent><C-h> :lua require("harpoon.ui").nav_file(1)<CR>
nnoremap <silent><C-j> :lua require("harpoon.ui").nav_file(2)<CR>
nnoremap <silent><C-k> :lua require("harpoon.ui").nav_file(3)<CR>
nnoremap <silent><C-l> :lua require("harpoon.ui").nav_file(4)<CR>


" ezmove
map  <Leader>ww <Plug>(easymotion-bd-w)
nmap <Leader>ww <Plug>(easymotion-overwin-w)
nmap <leader>f <Plug>(easymotion-s2)
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
map  n <Plug>(easymotion-next)
map  N <Plug>(easymotion-prev)

noremap  M "0p
autocmd InsertEnter,InsertLeave * set cul!

nnoremap cn *``cgn
nnoremap cN *``cgN
inoremap <C-j> <Down>
inoremap <C-k> <Up>


