if empty(glob('~/.config/vim/autoload/plug.vim'))
       silent !curl -fLo ~/.config/vim/autoload/plug.vim --create-dirs
         \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
       autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
    endif
"set nocompatible
syntax enable
let mapleader = ' '

set number relativenumber
set noswapfile
set scrolloff=3
set backspace=indent,eol,start
set foldmethod=expr foldexpr=getline(v\:lnum)=~\'\\#\\s\\#\\s\'?\'>1\'\:\'=\' foldlevel=0
set clipboard=unnamedplus

" Pythonic stuff
set tabstop=4
set expandtab
set softtabstop=4
set shiftwidth=4
set autoindent
set fileformat=unix

set hidden
set wildmenu
set hlsearch
set ignorecase
set smartcase
"set laststatus=2
"
set undofile                " Save undos after file closes
set undodir=/tmp" where to save undo histories
"set mouse=a
set cmdheight=2
map Y y$
set ttimeoutlen=50
set updatetime=500

call plug#begin('~/.config/vim/plugged')
Plug 'scrooloose/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'morhetz/gruvbox' 
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'airblade/vim-gitgutter'
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-commentary'
Plug 'neovim/nvim-lspconfig'
Plug 'folke/lsp-colors.nvim'
Plug 'nvim-lua/completion-nvim'
Plug 'nvim-lua/diagnostic-nvim'
Plug 'sbdchd/neoformat'
call plug#end()


lua require('lspconfig').pylsp.setup{ on_attach=require'completion'.on_attach}
let asyncomplete_auto_completeopt = 0
set completeopt=menuone,noinsert,noselect

let g:EasyMotion_smartcase = 1
let g:jedi#show_call_signatures = 1
let g:jupyter_mapkeys = 0
let g:gitgutter_close_preview_on_escape=1
let g:airline_theme='gruvbox'
autocmd FileType python setlocal completeopt-=preview

colorscheme gruvbox
let g:gruvbox_transparent_bg = 1
set background=dark
highlight Normal     ctermbg=NONE guibg=NONE
highlight LineNr     ctermbg=NONE guibg=NONE
highlight SignColumn ctermbg=NONE guibg=NONE

" unmapping
" cant find a way for plugin maps, remap for now
map <leader>gsh <Plug>(GitGutterStageHunk)
map <leader>gsu <Plug>(GitGutterUndoHunk)
map <leader>gsp <Plug>(GitGutterPreviewHunk)
"
"
map <leader>glf :Neoformat<CR>


nnoremap ; :
nnoremap : ;
nnoremap <leader>wh :wincmd h<CR>
nnoremap <leader>wj :wincmd j<CR>
nnoremap <leader>wk :wincmd k<CR>
nnoremap <leader>wl :wincmd l<CR>
nnoremap <leader>l :bp<CR>
nnoremap <leader>h :bn<CR>
nnoremap <leader>bw :bw<CR>
nnoremap <leader>p :buffers<CR>:buffer<Space>

nnoremap <C-p> :Files<CR>
nnoremap <leader>z :noh<CR>
nnoremap <leader>re :so ~/.config/vim/vimrc<CR>
nnoremap <leader>rr :edit!<CR>
nnoremap <leader>rg :Rg   

" -------------End

" ezmove
map  <Leader>ww <Plug>(easymotion-bd-w)
nmap <Leader>ww <Plug>(easymotion-overwin-w)
nmap <leader>f <Plug>(easymotion-s2)
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
map  n <Plug>(easymotion-next)
map  N <Plug>(easymotion-prev)

noremap  M "0p
autocmd InsertEnter,InsertLeave * set cul!

nnoremap cn *``cgn
nnoremap cN *``cgN
inoremap <C-j> <Down>
inoremap <C-k> <Up>

